{
  "swagger" : "2.0",
  "info" : {
    "description" : "BHub Fintech Api",
    "version" : "1.0.3",
    "title" : "BHub Fintech API",
    "contact" : {
      "email" : "it@openpass.com.ar"
    },
    "license" : {
      "name" : "OpenpassÂ©",
      "url" : "https://www.openpass.com.ar"
    }
  },
  "host" : "dev.openpass.com.ar",
  "basePath" : "/bhubApi/1.0.0/",
  "tags" : [ {
    "name" : "Users & Applications"
  }, {
    "name" : "Financial Account"
  }, {
    "name" : "Products"
  }, {
    "name" : "Payments"
  }, {
    "name" : "Sales"
  }, {
    "name" : "Bill Payments Payer Services",
    "description" : "Bill payment payer api services"
  }, {
    "name" : "Payments Intents",
    "description" : "A PaymentIntent guides you through the process of collecting a payment from your customer"
  }, {
    "name" : "Payouts",
    "description" : "Send money to differents Payouts destinations types"
  }, {
    "name" : "Inventory"
  }, {
    "name" : "Notifications"
  }, {
    "name" : "Stats"
  }, {
    "name" : "Resources",
    "description" : "Objetos auxiliares"
  } ],
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "security" : [ {
    "ApiKeyAuth" : [ ]
  } ],
  "paths" : {
    "/login" : {
      "post" : {
        "tags" : [ "Authentification" ],
        "summary" : "Get Login Token",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "login",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoginAuth"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AuthToken"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/loginSso" : {
      "post" : {
        "tags" : [ "Authentification" ],
        "summary" : "Get Sso Login Token",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "loginSso",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoginSso"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AuthToken"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/me" : {
      "get" : {
        "tags" : [ "Users & Applications" ],
        "summary" : "Logged user info detail",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/ApplicationUser"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Users & Applications" ],
        "summary" : "Modify user info",
        "description" : "Modify user info",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "applicationUser",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ApplicationUser"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/ApplicationUser"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/me/change-password" : {
      "post" : {
        "tags" : [ "Users & Applications" ],
        "summary" : "Change password login",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "changePassword",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChangePassword"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AuthToken"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/me/upload-avatar" : {
      "put" : {
        "tags" : [ "Users & Applications" ],
        "summary" : "Upload avatar of application user",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "avatarImageBytes",
          "in" : "formData",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationUser"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/my-account" : {
      "get" : {
        "tags" : [ "Users & Applications" ],
        "summary" : "Get details of My Account Holder",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Users & Applications" ],
        "summary" : "Modify My Account Holder",
        "description" : "Modify Account Holder",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "account",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Account"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/my-account/upload-avatar" : {
      "put" : {
        "tags" : [ "Users & Applications" ],
        "summary" : "Upload avatar of account",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "avatarImageBytes",
          "in" : "formData",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/my-account/users" : {
      "get" : {
        "tags" : [ "Users & Applications" ],
        "summary" : "Get all users for logged account",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ApplicationUser"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Users & Applications" ],
        "summary" : "Add user to account",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "applicationUser",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ApplicationUser"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationUser"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/my-account/users/{id}" : {
      "put" : {
        "tags" : [ "Users & Applications" ],
        "summary" : "Modify application user",
        "description" : "Modify a application user of account",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of ApplicationUser",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "applicationUser",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ApplicationUser"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/my-account/users/{id}/reset-password" : {
      "post" : {
        "tags" : [ "Users & Applications" ],
        "summary" : "Reset password of ApplicationUser",
        "description" : "This method process a reset password for application user. This process send email with the steps to assign a new login password.",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of ApplicationUser",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/my-account/user-groups" : {
      "get" : {
        "tags" : [ "Users & Applications" ],
        "summary" : "Get available user groups for account",
        "description" : "User groups, are permission roles for each users. Each account, has a users groups avaiable, to assign to each users for account. This grups, has differents permissions.",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UserGroup"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/my-account/business-resources/atm-cards" : {
      "get" : {
        "tags" : [ "Business Resources" ],
        "summary" : "Get all available atm cards",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AtmCard"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/account/comercialAccount/register" : {
      "post" : {
        "tags" : [ "Register" ],
        "summary" : "Register new comecial account",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "login",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ComercialAccountRegister"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Register"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/account/finalConsumerAccount/register" : {
      "post" : {
        "tags" : [ "Register" ],
        "summary" : "Register new final consumer account",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "login",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Register"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Register"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "403" : {
            "description" : "Forbidden",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/financial-accounts" : {
      "get" : {
        "tags" : [ "Financial Account" ],
        "summary" : "Get all Financial account",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FinancialAccount"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/financial-account/{id}" : {
      "get" : {
        "tags" : [ "Financial Account" ],
        "summary" : "Get FinancialAccount details",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of Financial Account",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/FinancialAccount"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/financial-account/{financial-accountId}/add-funds" : {
      "post" : {
        "tags" : [ "Financial Account" ],
        "summary" : "Add funds to a prepaid financial account",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "financial-accountId",
          "in" : "path",
          "description" : "Id of financial account",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Payment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Purchase"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/financial-accounts/prepaid-accounts" : {
      "get" : {
        "tags" : [ "Financial Account" ],
        "summary" : "Get all PrePaid Financial account",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FinancialAccount"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/financial-account/prepaid-account/{prepaidAccountId}/add-funds" : {
      "post" : {
        "tags" : [ "Financial Account" ],
        "summary" : "Add funds to a prepaid financial account",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "prepaidAccountId",
          "in" : "path",
          "description" : "Id of financial prepaid account",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "purchase",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Purchase"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Purchase"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/financial-account/{id}/balance-detail" : {
      "get" : {
        "tags" : [ "Financial Account" ],
        "summary" : "Get FinancialAccount balance summary for differents filters",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of Financial Account",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "beginDate",
          "in" : "query",
          "description" : "Begin date balance",
          "required" : false,
          "type" : "string",
          "format" : "date"
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "End date balance",
          "required" : false,
          "type" : "string",
          "format" : "date"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BalanceSummary"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/financial-account/{id}/movements" : {
      "get" : {
        "tags" : [ "Financial Account" ],
        "summary" : "Get FinancialAccount balance summary for differents filters",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of Financial Account",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "beginDate",
          "in" : "query",
          "description" : "Begin date balance",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "End date balance",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "movementSubType",
          "in" : "query",
          "description" : "Type of movement",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "Monetary direction",
          "required" : false,
          "type" : "string",
          "enum" : [ "debit", "credit" ]
        }, {
          "name" : "transactionType",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Integer from start result",
          "required" : false,
          "type" : "integer",
          "default" : 0
        }, {
          "name" : "limitIndex",
          "in" : "query",
          "description" : "Limit count of result",
          "required" : false,
          "type" : "integer",
          "default" : 20
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FinancialMovement"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/financial-account/{id}/movements/{movementId}" : {
      "get" : {
        "tags" : [ "Financial Account" ],
        "summary" : "Get Movement detail for MovementId",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of Financial Account",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "movementId",
          "in" : "path",
          "description" : "Movement Id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok",
            "schema" : {
              "$ref" : "#/definitions/FinancialMovement"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/products" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "All Products available",
        "description" : "Return the products available",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "productCategoryId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Product"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Products" ],
        "summary" : "Add a product",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "product",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Product"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Product"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/product/{id}" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "Product by Id",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of product",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Product"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Products" ],
        "summary" : "Modify a product",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of product",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Product"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/payment-methods" : {
      "get" : {
        "tags" : [ "Payments" ],
        "summary" : "Get all available payment methods",
        "description" : "Return all available payment methods",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Payment method Type",
          "required" : false,
          "type" : "string",
          "enum" : [ "credit_card", "debit_card", "qr_code", "virtual_wallet", "link_button", "bank_transfer", "bank_check", "bank_deposit", "collector_network" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PaymentMethodDefinition"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/payment-methods-transaction" : {
      "post" : {
        "tags" : [ "Payments" ],
        "summary" : "Get available payment methods for a transaction",
        "description" : "Return all available payment methods for a transaction",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "transaction",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Transaction"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PaymentMethodDefinition"
              },
              "example" : [ {
                "id" : "cash",
                "name" : "Efectivo",
                "enable" : true,
                "minimiumAmount" : 1.0,
                "maximiumAmount" : 10000.0,
                "paymentMethodType" : "cash"
              }, {
                "id" : "credit_card",
                "name" : "T. Credito",
                "enable" : true,
                "minimiumAmount" : 1.0,
                "maximiumAmount" : 10000.0,
                "paymentMethodType" : "credit_card",
                "paymentDataClassName" : "card_data"
              }, {
                "id" : "debit_card",
                "name" : "T. Debito",
                "enable" : true,
                "minimiumAmount" : 1.0,
                "maximiumAmount" : 10000.0,
                "paymentMethodType" : "debit_card",
                "paymentDataClassName" : "card_data"
              }, {
                "id" : "mercadopago_qr",
                "name" : "Mercado Pago",
                "enable" : true,
                "minimiumAmount" : 1.0,
                "maximiumAmount" : 10000.0,
                "paymentMethodType" : "qr_code"
              }, {
                "id" : "cuentadni_wallet",
                "name" : "Bapro CuentaDNI",
                "enable" : true,
                "minimiumAmount" : 1.0,
                "maximiumAmount" : 10000.0,
                "paymentMethodType" : "virtual_wallet",
                "paymentDataClassName" : "virtual_wallet_data"
              } ]
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/payment-methods/cardToken" : {
      "post" : {
        "tags" : [ "Payments" ],
        "summary" : "Add and tokenize a card",
        "description" : "You can create a tokenized card, which will be available as a means of payment for your account",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "cardToken",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CardTokenRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CardDefinition"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/payment-methods/cardToken/{paymentMethodDefinitionId}" : {
      "delete" : {
        "tags" : [ "Payments" ],
        "summary" : "Delete a card token payment method definition",
        "description" : "Delete a card token payment method definition.",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "paymentMethodDefinitionId",
          "in" : "path",
          "description" : "Id of card token payment method definition",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/payment-methods/bank-accounts" : {
      "get" : {
        "tags" : [ "Payments" ],
        "summary" : "Get available bank-accounts",
        "description" : "Return all available bank accounts",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BankAccount"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/banks" : {
      "get" : {
        "tags" : [ "Payments" ],
        "summary" : "Get available Banks",
        "description" : "Get available Banks",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Bank"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/bank/{id}" : {
      "get" : {
        "tags" : [ "Payments" ],
        "summary" : "Get Bank object",
        "description" : "Get bank object",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of bank",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Bank"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/bank/{id}/branches" : {
      "get" : {
        "tags" : [ "Payments" ],
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Integer from start result",
          "required" : false,
          "type" : "integer",
          "default" : 0
        }, {
          "name" : "limitIndex",
          "in" : "query",
          "description" : "Limit count of result",
          "required" : false,
          "type" : "integer",
          "default" : 20
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Branch"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/payments" : {
      "get" : {
        "tags" : [ "Payments" ],
        "summary" : "Get payments",
        "description" : "Get a list of payments",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "beginDate",
          "in" : "query",
          "description" : "Begin date balance",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "End date balance",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "paymentMethodId",
          "in" : "query",
          "description" : "A payment method id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "approved", "pending", "rejected" ]
        }, {
          "name" : "transactionNumber",
          "in" : "query",
          "description" : "Transaction number",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "paymentMethodType",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clientTransactionId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Integer from start result",
          "required" : false,
          "type" : "integer",
          "default" : 0
        }, {
          "name" : "limitIndex",
          "in" : "query",
          "description" : "Limit count of result",
          "required" : false,
          "type" : "integer",
          "default" : 20
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Payment"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Payments" ],
        "summary" : "Add payment",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payment",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Payment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Payment"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/payments/balance-summary" : {
      "get" : {
        "tags" : [ "Payments" ],
        "summary" : "Balance summary report",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "beginDate",
          "in" : "query",
          "description" : "Begin date balance",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "End date balance",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BalanceSummary"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/payments/balance-detail" : {
      "get" : {
        "tags" : [ "Payments" ],
        "summary" : "Balance detail report",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "beginDate",
          "in" : "query",
          "description" : "Begin date balance",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "End date balance",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BalanceDetail"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/payment/{id}" : {
      "get" : {
        "tags" : [ "Payments" ],
        "summary" : "Get a payment transaction",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of transaction",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Payment"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Payments" ],
        "summary" : "Modify a Payment",
        "description" : "You only can modify a transaction payment that is in pending state.",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of transaction",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payment",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Payment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Payment"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Payments" ],
        "summary" : "Canel a Payment",
        "description" : "You only can cancel a transaction payment that is in pending state.",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of transaction",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Payment"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/payment/{id}/receipt" : {
      "get" : {
        "tags" : [ "Payments" ],
        "summary" : "Get the receipt for this transaction",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of transaction",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TransactionReceipt"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/payment/intents" : {
      "post" : {
        "tags" : [ "Payments Intents" ],
        "summary" : "Generate Payment Intention",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payment",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PaymentIntent"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PaymentIntent"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/payment/intents/{id}" : {
      "get" : {
        "tags" : [ "Payments Intents" ],
        "summary" : "Get payment intetion",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of transaction",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PaymentIntent"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Payments Intents" ],
        "summary" : "Cancel payment intetion",
        "description" : "You only can cancel a transaction payment that is in pending state.",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of transaction",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PaymentIntent"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/payment/intents/getByClientTransactionId" : {
      "get" : {
        "tags" : [ "Payments Intents" ],
        "summary" : "Get a payement intent by a client transaction id",
        "description" : "Get payment by client tranasction id",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "clientTransactionId",
          "in" : "query",
          "description" : "Client transaction id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PaymentIntent"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/transaction/{id}" : {
      "get" : {
        "tags" : [ "Transactions" ],
        "summary" : "Get a transaction from Id",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of transaction",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Transaction"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/transfer/inner" : {
      "post" : {
        "tags" : [ "Transfers" ],
        "summary" : "Add an inner transfer (between financialAccounts)",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "transfer",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Transfer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Transfer"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/transfer/outter" : {
      "post" : {
        "tags" : [ "Transfers" ],
        "summary" : "Add an outer transfer (between banks accounts)",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "transfer",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Transfer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Transfer"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/sales" : {
      "get" : {
        "tags" : [ "Sales", "Bill Payments Payer Services" ],
        "summary" : "Get sales",
        "description" : "Get a list of sales",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "beginDate",
          "in" : "query",
          "description" : "Begin date balance",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "End date balance",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "paymentMethodId",
          "in" : "query",
          "description" : "A payment method id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "approved", "pending", "rejected" ]
        }, {
          "name" : "productId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "productTypeId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "vendorId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionNumber",
          "in" : "query",
          "description" : "Transaction number",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "paymentMethodType",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clientTransactionId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Integer from start result",
          "required" : false,
          "type" : "integer",
          "default" : 0
        }, {
          "name" : "limitIndex",
          "in" : "query",
          "description" : "Limit count of result",
          "required" : false,
          "type" : "integer",
          "default" : 20
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Sale"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Sales" ],
        "summary" : "Add sale",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "sale",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Sale"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Sale"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/sale/{id}" : {
      "get" : {
        "tags" : [ "Sales", "Bill Payments Payer Services" ],
        "summary" : "Get a sale transaction",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of transaction",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Sale"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Sales", "Bill Payments Payer Services" ],
        "summary" : "Modify a Sale",
        "description" : "You only can modify a transaction sale that is in pending state.",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of transaction",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "payment",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Sale"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Sale"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Sales", "Bill Payments Payer Services" ],
        "summary" : "Cancel a Sale",
        "description" : "You only can cancel a transaction that is in pending state.",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of transaction",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Sale"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/sale/{id}/receipt" : {
      "get" : {
        "tags" : [ "Sales", "Bill Payments Payer Services" ],
        "summary" : "Get the receipt for this transaction",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of transaction",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/TransactionReceipt"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/sales/billPayment" : {
      "post" : {
        "tags" : [ "Bill Payments Payer Services" ],
        "summary" : "Make a new Bill Payment",
        "description" : "Method for make a new BillPayment",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "sale",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Sale"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Sale"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/sales/pinCode" : {
      "post" : {
        "tags" : [ "Sales" ],
        "summary" : "Make a new sale with pincode product",
        "description" : "Method for make a new sale with pincode product",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "sale",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Sale"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Sale"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/sales/cashOut" : {
      "post" : {
        "tags" : [ "Sales" ],
        "summary" : "Make a new cashOut sale",
        "description" : "Method for make a cash money out sale",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "sale",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Sale"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Sale"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/sales/saleProducts" : {
      "post" : {
        "tags" : [ "Sales" ],
        "summary" : "Make a new cashOut sale",
        "description" : "Method for make a cash money out sale",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "sale",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Sale"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Sale"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/sales/billPayment/availablesBill/findByBarCode" : {
      "get" : {
        "tags" : [ "Bill Payments Payer Services" ],
        "summary" : "Get a bill available for a bar code",
        "description" : "Get a bill available for a bar code",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "billBarCode",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "companyCode",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BillPaymentData"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/sales/billPayment/availablesBill/findByCustomerData" : {
      "get" : {
        "tags" : [ "Bill Payments Payer Services" ],
        "summary" : "Get a bill available for specific customer data",
        "description" : "Get a bill available for specific customer data",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "companyCode",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customerReference",
          "in" : "query",
          "description" : "Specifc customer Reference for company",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "voluntaryAmount",
          "in" : "query",
          "description" : "Specifc customer voluntary payment amount",
          "required" : false,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BillPaymentData"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/sales/billPayment/availablesCompanies" : {
      "get" : {
        "tags" : [ "Bill Payments Payer Services" ],
        "summary" : "Get all bill payment available company",
        "description" : "Get all bill payment available company",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BillCompany"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/sales/reports/summary" : {
      "get" : {
        "tags" : [ "Sales" ],
        "summary" : "Get total sales report",
        "description" : "Get total sales report",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "beginDate",
          "in" : "query",
          "description" : "Begin date balance",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "End date balance",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "state",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "approved", "pending", "rejected" ]
        }, {
          "name" : "productId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "productTypeId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "productGroupId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "vendorId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "groupBy",
          "in" : "query",
          "description" : "Group by options: product, vendor, proudctType, date",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TotalSale"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/sales/topup" : {
      "post" : {
        "tags" : [ "Sales" ],
        "summary" : "Make a TopUp sale product",
        "description" : "With this method you can carry out a sale transaction of the type Topup",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "sale",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Sale"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Sale"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/sales/topup/products" : {
      "get" : {
        "tags" : [ "Sales" ],
        "summary" : "Get productos avaiable for topUp",
        "description" : "Get productos avaiable for topUp",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Product"
              }
            }
          },
          "202" : {
            "description" : "Transaction Processing (Pending). You can query the result",
            "schema" : {
              "$ref" : "#/definitions/Sale"
            }
          },
          "400" : {
            "description" : "Transaction Rejected",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "402" : {
            "description" : "Transaction Cancelled",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/billPaymentGateway/publish" : {
      "post" : {
        "tags" : [ "BillPaymentGateway" ],
        "summary" : "Publish a new bill payment contract",
        "description" : "Method for publish bill payments to be available for payment",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "billPaymentPublication",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BillPaymentPublication"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/BillPaymentPublication"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/cashInOutGateway/publish" : {
      "post" : {
        "tags" : [ "CashInOutGateway" ],
        "summary" : "Publish a new cash in/out contract",
        "description" : "Method for publish cash-in/out to be available for payment",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "cashInOutPublication",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CashInOutPublication"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/CashInOutPublication"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/activities/transactional" : {
      "get" : {
        "tags" : [ "Stats" ],
        "summary" : "Get transactional activities",
        "description" : "Get a list of transactional activities",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "beginDate",
          "in" : "query",
          "description" : "Begin date balance",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "End date balance",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "state",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "approved", "pending", "rejected" ]
        }, {
          "name" : "productId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "productTypeId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "vendorId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "paymentMethodType",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionType",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Integer from start result",
          "required" : false,
          "type" : "integer",
          "default" : 0
        }, {
          "name" : "limitIndex",
          "in" : "query",
          "description" : "Limit count of result",
          "required" : false,
          "type" : "integer",
          "default" : 20
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TransactionalActivity"
              },
              "example" : [ {
                "className" : "TransactionalActivity",
                "date" : "20191101T121054Z",
                "title" : "Recarga Celular",
                "imageUrl" : "gv/logoClaro.png",
                "amount" : 150.0,
                "description" : "+541125412541",
                "state" : "approved",
                "productType" : "Recharge",
                "transactionId" : "2D06478D397F297806E6",
                "transactionType" : "Sale"
              }, {
                "className" : "TransactionalActivity",
                "date" : "20191030T121054Z",
                "title" : "Recarga Celular",
                "imageUrl" : "gv/logoPersonal.png",
                "amount" : 200.0,
                "description" : "+541125412541",
                "state" : "pending",
                "productType" : "Recharge",
                "transactionId" : "2D06478D397F297806E6",
                "transactionType" : "Sale"
              }, {
                "className" : "TransactionalActivity",
                "date" : "20190930T121054Z",
                "title" : "Recarga Celular",
                "imageUrl" : "gv/logoMovistar.png",
                "amount" : 100.0,
                "description" : "+541125412541",
                "state" : "rejected",
                "productType" : "Recharge",
                "transactionId" : "2D06478D397F297806E6",
                "transactionType" : "Sale"
              } ]
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/promotions" : {
      "get" : {
        "tags" : [ "Notifications" ],
        "summary" : "Get all available promotions",
        "description" : "Get all available promotions",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Promotion"
              },
              "example" : [ {
                "id" : "19A40F54F62925240D17",
                "title" : "Promo Personal",
                "description" : "Con Personal recarga mas credito con menos dinero",
                "imageUrl" : "https://cdn.ynercia.com.ar/promos/PersonalWSP1.jpg"
              }, {
                "id" : "19A40F54F62925240D17",
                "title" : "Promo Claro",
                "description" : "Con Claro recarga mas credito con menos dinero",
                "imageUrl" : "https://cdn.ynercia.com.ar/promos/01_claro_triplica.jpg",
                "linkUrl" : "https://www.telerecargas.com.ar"
              } ]
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/notifications" : {
      "get" : {
        "tags" : [ "Notifications" ],
        "summary" : "Get notifications",
        "description" : "Get a list of notifications",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "beginDate",
          "in" : "query",
          "description" : "Begin date balance",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "End date balance",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "startIndex",
          "in" : "query",
          "description" : "Integer from start result",
          "required" : false,
          "type" : "integer",
          "default" : 0
        }, {
          "name" : "limitIndex",
          "in" : "query",
          "description" : "Limit count of result",
          "required" : false,
          "type" : "integer",
          "default" : 20
        }, {
          "name" : "onlyUnread",
          "in" : "query",
          "description" : "Include only unread notifications",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GvpNotification"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/notifications/unreadCount" : {
      "get" : {
        "tags" : [ "Notifications" ],
        "summary" : "Get unread notifications count",
        "description" : "Get unread notifications count",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "integer",
              "example" : 7
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/notification/{id}/read" : {
      "put" : {
        "tags" : [ "Notifications" ],
        "summary" : "Read notification",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of notification",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GvpNotification"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/notification/{id}" : {
      "delete" : {
        "tags" : [ "Notifications" ],
        "summary" : "Delete notification",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Id of notification",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "string",
              "example" : "OK"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/me/check-email-availability" : {
      "get" : {
        "tags" : [ "Resources" ],
        "summary" : "Check if email is available",
        "description" : "Check if email is available",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Email for check",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "string",
              "example" : "OK"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/me/check-phone-availability" : {
      "get" : {
        "tags" : [ "Resources" ],
        "summary" : "Check if phone number is available",
        "description" : "Check if phone number is available",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "phone",
          "in" : "query",
          "description" : "Phone E.164 format",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "string",
              "example" : "OK"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/me/check-identification-availability" : {
      "get" : {
        "tags" : [ "Resources" ],
        "summary" : "Check if identification type and number is available",
        "description" : "Check if identification number is available",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "identificationTypeCode",
          "in" : "query",
          "description" : "Code of identification Type",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "identificationNumber",
          "in" : "query",
          "description" : "Identification number",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "string",
              "example" : "OK"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/me/phone" : {
      "put" : {
        "tags" : [ "Users & Applications" ],
        "summary" : "Update my phone number",
        "description" : "Update my phone number",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "phone",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Phone"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationUser"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/me/email" : {
      "put" : {
        "tags" : [ "Users & Applications" ],
        "summary" : "Update my email",
        "description" : "Update my email",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "sale",
          "required" : true,
          "schema" : {
            "type" : "string",
            "description" : "Email"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ApplicationUser"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/me/phone/send-validation-request" : {
      "post" : {
        "tags" : [ "Users & Applications" ],
        "summary" : "Send Phone validation Code",
        "description" : "Send Phone validation Code",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "PhoneValidationRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PhoneValidationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/me/phone/validate-code" : {
      "post" : {
        "tags" : [ "Users & Applications" ],
        "summary" : "Validate received phone verification code",
        "description" : "Validate received phone verification code",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "PhoneValidationRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PhoneValidationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/account/check-tributaryCode-availability" : {
      "get" : {
        "tags" : [ "Resources" ],
        "summary" : "Check if tributary code is available",
        "description" : "Check if tributary code is available",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tributarycode",
          "in" : "query",
          "description" : "Tributary code for check",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tributaryidentificationtypeid",
          "in" : "query",
          "description" : "tributry identification type",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "string",
              "example" : "OK"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/tributaryInfo/tributaryIdentificationTypes" : {
      "get" : {
        "tags" : [ "Resources" ],
        "summary" : "Tributary identifitacion types",
        "description" : "Return all availables tributary identification types",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TributaryIdentificationType"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/tributaryInfo/tributaryConditions" : {
      "get" : {
        "tags" : [ "Resources" ],
        "summary" : "Tributary conditions",
        "description" : "Return all availables tributary conditions",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TributaryCondition"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/account/comercialTypes" : {
      "get" : {
        "tags" : [ "Resources" ],
        "summary" : "Commerce types",
        "description" : "Return all availables account commerce type",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ComercialType"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/account/comercialType/{comercialTypeId}" : {
      "get" : {
        "tags" : [ "Resources" ],
        "summary" : "Commerce types",
        "description" : "Return a commerce type by id",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "comercialTypeId",
          "in" : "path",
          "description" : "Id of Country",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ComercialType"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/address/countries" : {
      "get" : {
        "tags" : [ "Address Resources" ],
        "summary" : "Available countries",
        "description" : "Return all availables country",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Country"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/address/reverse-geolocation" : {
      "post" : {
        "tags" : [ "Address Resources" ],
        "summary" : "Get Address location by geolocation object",
        "description" : "Get Address location by geolocation object",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "GeoCoordinates",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/GeoCoordinates"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Address"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Address"
            }
          }
        }
      }
    },
    "/address/country/{countryId}" : {
      "get" : {
        "tags" : [ "Address Resources" ],
        "description" : "Return available country",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "countryId",
          "in" : "path",
          "description" : "Id of Country",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Country"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/address/country/{countryId}/provinces" : {
      "get" : {
        "tags" : [ "Address Resources" ],
        "summary" : "Available province for country",
        "description" : "Return all availables provinces for a country",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "countryId",
          "in" : "path",
          "description" : "Id of Country",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Province"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/address/country/{countryId}/province/{provinceId}" : {
      "get" : {
        "tags" : [ "Address Resources" ],
        "description" : "Return available province",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "countryId",
          "in" : "path",
          "description" : "Id of Country",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "provinceId",
          "in" : "path",
          "description" : "Id of Province",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Province"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/address/country/{countryId}/province/{provinceId}/cities" : {
      "get" : {
        "tags" : [ "Address Resources" ],
        "summary" : "Available citie for province",
        "description" : "Return all availables cities for a province",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "countryId",
          "in" : "path",
          "description" : "Id of Country",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "provinceId",
          "in" : "path",
          "description" : "Id of Province",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/City"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/address/country/{countryId}/province/{provinceId}/city/{cityId}" : {
      "get" : {
        "tags" : [ "Address Resources" ],
        "description" : "Return available city",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "countryId",
          "in" : "path",
          "description" : "Id of Country",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "provinceId",
          "in" : "path",
          "description" : "Id of District",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "cityId",
          "in" : "path",
          "description" : "Id of City",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/City"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/address/country/{countryId}/province/{provinceId}/city/{cityId}/districts" : {
      "get" : {
        "tags" : [ "Address Resources" ],
        "summary" : "Available districts for city",
        "description" : "Return all availables cities for a province",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "countryId",
          "in" : "path",
          "description" : "Id of Country",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "provinceId",
          "in" : "path",
          "description" : "Id of Province",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "cityId",
          "in" : "path",
          "description" : "Id of City",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/District"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    },
    "/address/country/{countryId}/province/{provinceId}/city/{cityId}/district/{districtId}" : {
      "get" : {
        "tags" : [ "Address Resources" ],
        "description" : "Return available district",
        "parameters" : [ {
          "name" : "applicationId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "countryId",
          "in" : "path",
          "description" : "Id of Country",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "provinceId",
          "in" : "path",
          "description" : "Id of Province",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "cityId",
          "in" : "path",
          "description" : "Id of City",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "districtId",
          "in" : "path",
          "description" : "Id of District",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/District"
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "404" : {
            "description" : "The specified resource was not found",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/GvpError"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "ApiKeyAuth" : {
      "type" : "apiKey",
      "name" : "accessToken",
      "in" : "header"
    }
  },
  "definitions" : {
    "LoginAuth" : {
      "type" : "object",
      "properties" : {
        "userId" : {
          "type" : "string"
        },
        "userPassword" : {
          "type" : "string"
        }
      }
    },
    "LoginSso" : {
      "type" : "object",
      "properties" : {
        "providerName" : {
          "type" : "string",
          "example" : "Google",
          "description" : "Sso provider name"
        },
        "providerCode" : {
          "type" : "string",
          "description" : "Sso provider code"
        },
        "token" : {
          "type" : "string",
          "example" : "APA91bEIpum4daJAR2cu3SIEyDvNenr67QsZyVmTpUYv6FENnCgEhXk9I2mak2VRuwV",
          "description" : "Sso auth token"
        }
      }
    },
    "ChangePassword" : {
      "type" : "object",
      "properties" : {
        "actualPassword" : {
          "type" : "string",
          "description" : "Actual password"
        },
        "newPassword" : {
          "type" : "string",
          "description" : "New password"
        },
        "newPasswordValidation" : {
          "type" : "string",
          "description" : "New password validation"
        }
      }
    },
    "AuthToken" : {
      "type" : "object",
      "properties" : {
        "accessToken" : {
          "type" : "string",
          "example" : "76A3D72939F1DE921B36C33FBC3FE150"
        },
        "lifetime" : {
          "type" : "number",
          "example" : 1800.0,
          "description" : "Lifetime seconds"
        },
        "needChangePassword" : {
          "type" : "boolean",
          "example" : false,
          "description" : "This token need change User password validation"
        }
      }
    },
    "ApplicationUser" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "7CD008734CB91C54A100",
          "readOnly" : true
        },
        "enable" : {
          "type" : "boolean",
          "example" : true
        },
        "userId" : {
          "type" : "string",
          "example" : "rperez"
        },
        "firstName" : {
          "type" : "string",
          "example" : "Roberto"
        },
        "lastName" : {
          "type" : "string",
          "example" : "Gomez"
        },
        "userEmail" : {
          "type" : "string",
          "example" : "rperez@gmail.com"
        },
        "userEmailVerified" : {
          "type" : "boolean",
          "example" : true
        },
        "phone" : {
          "type" : "string",
          "example" : "+541112344455"
        },
        "phoneVerified" : {
          "type" : "boolean",
          "example" : true
        },
        "identificationNumber" : {
          "type" : "string",
          "example" : "30234443"
        },
        "identificationNumberType" : {
          "$ref" : "#/definitions/IdentificationType"
        },
        "identificationVerified" : {
          "type" : "boolean",
          "example" : true
        },
        "avatarUrl" : {
          "type" : "string",
          "example" : "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQruPhEXVOoNPNPamKSV9ylPR31gg8GGfnjffm2-sgtCjnajtXGnA"
        },
        "userGroup" : {
          "$ref" : "#/definitions/UserGroup"
        },
        "verified" : {
          "type" : "boolean",
          "example" : true,
          "readOnly" : true
        },
        "firstLogin" : {
          "type" : "boolean",
          "example" : false,
          "readOnly" : true
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        },
        "accountsRelations" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/ApplicationUserAccountRelation"
          }
        }
      },
      "description" : "User application"
    },
    "ApplicationUserAccountRelation" : {
      "type" : "object",
      "properties" : {
        "accountId" : {
          "type" : "string",
          "example" : "7CD008734CB91C54A100",
          "description" : "Account id",
          "readOnly" : true
        },
        "relationType" : {
          "$ref" : "#/definitions/AccountRelationType"
        }
      },
      "description" : "Indicates the type of relationship between an applicationuser and an account"
    },
    "AccountRelationType" : {
      "type" : "string",
      "enum" : [ "holder", "joint", "authorized" ]
    },
    "UserGroup" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "7CD008734CB91C54A100",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "Empleado"
        },
        "description" : {
          "type" : "string",
          "example" : "Permisos de empleado"
        },
        "principal" : {
          "type" : "boolean",
          "example" : true
        }
      },
      "description" : "User role group"
    },
    "Address" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "7CD008734CB91C54A100",
          "readOnly" : true
        },
        "streetName" : {
          "type" : "string",
          "example" : "Suipacha"
        },
        "streetNumber" : {
          "type" : "string",
          "example" : "3244"
        },
        "betweenStreet1" : {
          "type" : "string"
        },
        "betweenStreet2" : {
          "type" : "string"
        },
        "blockName" : {
          "type" : "string"
        },
        "lotName" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string",
          "example" : "C4452"
        },
        "district" : {
          "$ref" : "#/definitions/District"
        },
        "city" : {
          "$ref" : "#/definitions/City"
        },
        "province" : {
          "$ref" : "#/definitions/Province"
        },
        "country" : {
          "$ref" : "#/definitions/Country"
        },
        "geoLocation" : {
          "$ref" : "#/definitions/GeoLocation"
        }
      },
      "description" : "Address Object"
    },
    "Account" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "7CD008734CB91C54A100",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "Kiosko Flash"
        },
        "businessName" : {
          "type" : "string",
          "example" : "Kiosko Oeste S.A."
        },
        "accountNumber" : {
          "type" : "integer",
          "example" : 49536
        },
        "type" : {
          "type" : "string",
          "enum" : [ "PointOfSale", "Reseller", "Platform", "EndUser" ]
        },
        "status" : {
          "type" : "string",
          "enum" : [ "Open", "Pending", "Closed", "Suspended" ]
        },
        "commercialType" : {
          "$ref" : "#/definitions/ComercialType"
        },
        "tributaryInfo" : {
          "$ref" : "#/definitions/TributaryInfo"
        },
        "accountQualification" : {
          "$ref" : "#/definitions/AccountQualification"
        },
        "parentAccount" : {
          "$ref" : "#/definitions/Account"
        },
        "accountLevel" : {
          "type" : "integer",
          "example" : 4
        },
        "verifiedAccount" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "accountMissingData" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        },
        "avatarUrl" : {
          "type" : "string",
          "example" : "https://1.bp.blogspot.com/-Cw9-HvmmSI8/XJuWusCs2rI/AAAAAAAAIlA/GCP58NKq1_QIawuVFLwWaM5vYwFDq0PqgCPcBGAYYCw/s640/maxikiosco%2B22.jpg"
        }
      },
      "description" : "Account Holder"
    },
    "Register" : {
      "type" : "object",
      "required" : [ "user" ],
      "properties" : {
        "user" : {
          "$ref" : "#/definitions/UserRegister"
        }
      }
    },
    "ComercialAccountRegister" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Register"
      }, {
        "properties" : {
          "account" : {
            "$ref" : "#/definitions/AccountRegister"
          }
        }
      } ]
    },
    "UserRegister" : {
      "type" : "object",
      "required" : [ "email", "firstName", "identificationNumber", "lastName", "phone", "phoneVerified" ],
      "properties" : {
        "firstName" : {
          "type" : "string",
          "example" : "Roberto",
          "description" : "User firstname"
        },
        "lastName" : {
          "type" : "string",
          "example" : "Gomez",
          "description" : "Lastname firstname"
        },
        "username" : {
          "type" : "string",
          "example" : "rgomez",
          "description" : "Login username"
        },
        "email" : {
          "type" : "string",
          "example" : "robertogomez@gmail.com",
          "description" : "User email. This email will be validated as unique in the entire platform "
        },
        "emailVerified" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates if the email is already validated"
        },
        "phone" : {
          "type" : "string",
          "example" : "+541112344455",
          "description" : "E.164 user phone. This phone will be validated as unique in the entire platform"
        },
        "phoneVerified" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates if the phone is already validated"
        },
        "identificationNumber" : {
          "type" : "string",
          "example" : "30894444"
        },
        "identificationNumberType" : {
          "$ref" : "#/definitions/IdentificationType"
        },
        "identificationVerified" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Indicates that the identification data was verified"
        },
        "tributaryInfo" : {
          "$ref" : "#/definitions/TributaryInfo"
        },
        "address" : {
          "description" : "User address",
          "$ref" : "#/definitions/Address"
        },
        "avatarImageUrl" : {
          "type" : "string",
          "description" : "Image source url"
        },
        "externalIdentity" : {
          "description" : "External IDP user definition",
          "$ref" : "#/definitions/Identity"
        },
        "userGroupId" : {
          "type" : "string",
          "description" : "You can indicate the role you want the user to have to register"
        }
      }
    },
    "AccountRegister" : {
      "type" : "object",
      "properties" : {
        "businessName" : {
          "type" : "string",
          "example" : "Kiosko Oeste S.A."
        },
        "description" : {
          "type" : "string",
          "example" : "Kiosko La Esquina"
        },
        "tributaryInfo" : {
          "$ref" : "#/definitions/TributaryInfo"
        },
        "avatarImage" : {
          "type" : "string",
          "description" : "Image bytes"
        }
      }
    },
    "Identity" : {
      "type" : "object",
      "properties" : {
        "provider" : {
          "type" : "string",
          "example" : "Auth0",
          "description" : "Identity provider name"
        },
        "user_id" : {
          "type" : "string",
          "example" : "c7b91381-a7b6-4af7-9b05-c39d405b856e",
          "description" : "User id on Identity Provider. Sub claim"
        }
      },
      "description" : "User definition on a Identity Provider"
    },
    "PersonalContact" : {
      "type" : "object",
      "properties" : {
        "displayName" : {
          "type" : "string",
          "example" : "Roberto Gomez"
        },
        "company" : {
          "type" : "string",
          "example" : "Kiosko 365"
        },
        "jobTitle" : {
          "type" : "string"
        },
        "emails" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "rgomez@gmail.com"
          }
        },
        "phones" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PhoneData"
          }
        }
      },
      "description" : "Personal information contact"
    },
    "Activity" : {
      "type" : "object",
      "discriminator" : "className",
      "properties" : {
        "className" : {
          "type" : "string",
          "example" : "TransactionalActivity",
          "description" : "Name of object"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "20190502T121054Z",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "example" : "Recarga Celular",
          "readOnly" : true
        },
        "imageUrl" : {
          "type" : "string",
          "example" : "gv/logoPersonal.png",
          "description" : "Image for this activity"
        }
      },
      "description" : "Activity info"
    },
    "TransactionalActivity" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Activity"
      }, {
        "properties" : {
          "amount" : {
            "type" : "number",
            "format" : "double",
            "example" : 600.0,
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Aditional description of transactional activity",
            "readOnly" : true
          },
          "state" : {
            "$ref" : "#/definitions/TransactionState"
          },
          "productType" : {
            "$ref" : "#/definitions/ProductType"
          },
          "transactionId" : {
            "type" : "string",
            "example" : "2D06478D397F297806E6",
            "readOnly" : true
          },
          "transactionType" : {
            "$ref" : "#/definitions/TransactionType"
          }
        }
      } ]
    },
    "Promotion" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "example" : "20% off en recargas",
          "description" : "Promotion title",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "description" : "Todas tus recargas de celular, tienen un 20% de descuento inmediato",
          "readOnly" : true
        },
        "imageUrl" : {
          "type" : "string",
          "example" : "https://cdn.ynercia.com.ar/promos/PersonalWSP1.jpg",
          "description" : "Image for this promotion",
          "readOnly" : true
        },
        "linkUrl" : {
          "type" : "string",
          "description" : "Promotion external link"
        }
      }
    },
    "GvpNotification" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "date" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "20190502T121054Z",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "example" : "20% off en recargas",
          "description" : "Promotion title",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "description" : "Todas tus recargas de celular, tienen un 20% de descuento inmediato",
          "readOnly" : true
        },
        "readed" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates if the notification has already been read"
        },
        "priority" : {
          "type" : "string",
          "enum" : [ "low", "high" ]
        },
        "action" : {
          "type" : "string"
        }
      }
    },
    "FinancialAccount" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "7CD008734CB91C54A100",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "Virtual"
        },
        "description" : {
          "type" : "string",
          "example" : "Cuenta prepaga Virtual"
        },
        "isDefault" : {
          "type" : "boolean",
          "example" : true
        },
        "balanceAmount" : {
          "type" : "number",
          "example" : 3452.34,
          "description" : "final amount at end date balance summary"
        },
        "pendingAmount" : {
          "type" : "number",
          "example" : 100.0,
          "description" : "Total amount of pending balance to accredit"
        },
        "overdraftCredit" : {
          "type" : "number",
          "example" : 3452.34,
          "description" : "Overdraft amount"
        },
        "availableCredit" : {
          "type" : "number",
          "example" : 3452.34,
          "description" : "Available amount for this financial Account."
        }
      },
      "description" : "Financial Account"
    },
    "BalanceSummary" : {
      "type" : "object",
      "properties" : {
        "beginDate" : {
          "type" : "string",
          "example" : "2019-05-02",
          "description" : "Start date of balance summary"
        },
        "endDate" : {
          "type" : "string",
          "example" : "2019-05-02",
          "description" : "End date or result, of balance summary"
        },
        "beginAmount" : {
          "type" : "number",
          "example" : 3452.34,
          "description" : "amount of start date balance summary"
        },
        "endAmount" : {
          "type" : "number",
          "example" : 6756.54,
          "description" : "amount of end date or result of balance summary"
        },
        "pendingAmount" : {
          "type" : "number",
          "example" : 100.0,
          "description" : "Total amount of pending balance to accredit"
        },
        "rejectedAmount" : {
          "type" : "number",
          "example" : 0.0,
          "description" : "Total amount of rejected for this balance"
        },
        "balanceDetails" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BalanceDetail"
          }
        }
      },
      "description" : "Balance summary object"
    },
    "BalanceDetail" : {
      "properties" : {
        "date" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "20190502T121054Z",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "Comisiones"
        },
        "description" : {
          "type" : "string",
          "example" : "Acreditaciones de comisiones"
        },
        "totalAmount" : {
          "type" : "number",
          "example" : 4254.45
        },
        "transactionType" : {
          "$ref" : "#/definitions/TransactionType"
        },
        "movementSubType" : {
          "$ref" : "#/definitions/MovementSubType"
        }
      },
      "description" : "Balance Detail object"
    },
    "PaymentMethodType" : {
      "type" : "string",
      "example" : "credit_card",
      "enum" : [ "cash", "credit_card", "debit_card", "qr_code", "virtual_wallet", "link_button", "bank_transfer", "bank_check", "bank_deposit", "collector_network", "atm_card" ]
    },
    "TransactionStateDetail" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string",
          "description" : "Transaction detail message description"
        },
        "transactionType" : {
          "description" : "Message related origin transaction",
          "$ref" : "#/definitions/TransactionType"
        }
      }
    },
    "PaymentDataClassName" : {
      "type" : "string",
      "example" : "CardData",
      "enum" : [ "CashData", "CardData", "QrCodeData", "CollectorNetworkData", "BankDepositData", "BankCheckData", "BankTransferData", "VirtualWalletData", "LinkButtonData", "AtmCardData" ]
    },
    "TransactionType" : {
      "type" : "string",
      "enum" : [ "Payment", "Sale", "Debit", "Credit", "Transfer", "PurcharseInvoice", "SaleInvoice", "PaymentIntent" ]
    },
    "CardCapturedType" : {
      "type" : "string",
      "enum" : [ "Manual", "Magnetic", "IntegratedCircuit", "ContactLess" ]
    },
    "ProductType" : {
      "type" : "string",
      "enum" : [ "Recharge", "BillPayment", "PinCode", "Virtual", "Physical", "Transport", "Service", "Currency" ]
    },
    "MovementSubType" : {
      "type" : "string",
      "enum" : [ "GrossAmount", "Fee", "Vat", "WithheldVat" ]
    },
    "TransactionState" : {
      "type" : "string",
      "enum" : [ "approved", "pending", "rejected" ]
    },
    "Transaction" : {
      "type" : "object",
      "required" : [ "amount", "clientTransactionId" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "3B26087384811DD52425",
          "readOnly" : true
        },
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "20190502T121054Z",
          "readOnly" : true
        },
        "transactionType" : {
          "$ref" : "#/definitions/TransactionType"
        },
        "number" : {
          "type" : "number",
          "format" : "int",
          "example" : 3.488827527E9,
          "description" : "Transaction number",
          "readOnly" : true
        },
        "confirmationId" : {
          "type" : "string",
          "example" : "3488827527",
          "description" : "Confirmation id",
          "readOnly" : true
        },
        "confirmationDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "20190502T121054Z",
          "readOnly" : true
        },
        "amount" : {
          "type" : "number",
          "format" : "double",
          "example" : 600.0
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "comments" : {
          "type" : "string"
        },
        "state" : {
          "readOnly" : true,
          "$ref" : "#/definitions/TransactionState"
        },
        "stateDetail" : {
          "readOnly" : true,
          "$ref" : "#/definitions/TransactionStateDetail"
        },
        "clientTransactionId" : {
          "type" : "string",
          "example" : "3248236486",
          "description" : "The api consummer can use this field, to identify this transaction",
          "maxLength" : 22
        }
      },
      "description" : "Transaction object"
    },
    "Payment" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Transaction"
      }, {
        "properties" : {
          "currency" : {
            "$ref" : "#/definitions/Currency"
          },
          "paymentMethod" : {
            "description" : "Attach a PaymentMethod linked to this sale",
            "$ref" : "#/definitions/PaymentMethodDefinition"
          },
          "transactionData" : {
            "description" : "Payment Transaction Data",
            "$ref" : "#/definitions/TransactionData"
          }
        }
      } ],
      "description" : "Payment object"
    },
    "Purchase" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Transaction"
      }, {
        "properties" : {
          "payment" : {
            "description" : "Attach a PaymentObject linked to this purchase",
            "$ref" : "#/definitions/Payment"
          }
        }
      } ],
      "description" : "Purchase object"
    },
    "Sale" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Transaction"
      }, {
        "properties" : {
          "transactionType" : {
            "$ref" : "#/definitions/TransactionType"
          },
          "payment" : {
            "description" : "Attach a PaymentObject linked to this sale",
            "$ref" : "#/definitions/Payment"
          },
          "product" : {
            "description" : "Sale product",
            "$ref" : "#/definitions/Product"
          },
          "transactionData" : {
            "description" : "Product Transaction Data",
            "$ref" : "#/definitions/TransactionData"
          }
        }
      } ],
      "description" : "Sale Object"
    },
    "Transfer" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Transaction"
      }, {
        "properties" : {
          "transactionData" : {
            "description" : "Product Transaction Data",
            "$ref" : "#/definitions/TransactionData"
          }
        }
      } ],
      "description" : "Sale Object"
    },
    "PaymentIntent" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Transaction"
      }, {
        "properties" : {
          "publicUrl" : {
            "type" : "string",
            "example" : "https://payments.medipago.com.ar/intention",
            "description" : "URL de acceso al boton de pago",
            "readOnly" : true
          },
          "callback" : {
            "$ref" : "#/definitions/Callback"
          },
          "expirationDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "20190502T121054Z",
            "description" : "Fecha de expiracion del pago intencion",
            "readOnly" : true
          },
          "providerTransactionId" : {
            "type" : "string",
            "example" : "5845845-weAdnnrgkn9n2u",
            "description" : "Numero de autorizacion financiador"
          },
          "currency" : {
            "type" : "string",
            "example" : "032",
            "description" : "currency Iso Code"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/PaymentIntentItem"
            }
          },
          "provider" : {
            "$ref" : "#/definitions/Provider"
          },
          "customer" : {
            "$ref" : "#/definitions/Customer"
          }
        }
      } ]
    },
    "PaymentIntentItem" : {
      "properties" : {
        "product" : {
          "$ref" : "#/definitions/Product"
        },
        "description" : {
          "type" : "string",
          "example" : "Copago",
          "description" : "Descripcion del producto"
        },
        "quantity" : {
          "type" : "number",
          "example" : 500.0,
          "description" : "Cantidad"
        }
      }
    },
    "Provider" : {
      "type" : "object",
      "required" : [ "businessName", "externalId" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "3B26087384811DD52425",
          "readOnly" : true
        },
        "externalId" : {
          "type" : "string",
          "example" : "d290f1ee6c544b01900851",
          "description" : "Id unico que identifica al proveedor"
        },
        "businessName" : {
          "type" : "string",
          "example" : "AccordSalud",
          "description" : "Razon social del proveedor"
        }
      }
    },
    "Customer" : {
      "type" : "object",
      "required" : [ "identificationNumber", "providerIdentificationNumber" ],
      "properties" : {
        "externalId" : {
          "type" : "string",
          "example" : "d290f1ee6c544b01900851",
          "description" : "Id unico que identifica al proveedor"
        },
        "identificationNumber" : {
          "type" : "string",
          "example" : "27454125",
          "description" : "Numero de documento / cuit del cliente"
        },
        "providerIdentificationNumber" : {
          "type" : "string",
          "example" : "3054454154547845",
          "description" : "Numero de identificacon del cliente en el proveedor"
        },
        "firstName" : {
          "type" : "string",
          "example" : "Gustavo",
          "description" : "Nombre del cliente"
        },
        "lastName" : {
          "type" : "string",
          "example" : "Gonzalez",
          "description" : "Apellido del cliente"
        },
        "email" : {
          "type" : "string",
          "example" : "ggonzalez@gmail.com",
          "description" : "Email del cliente"
        }
      }
    },
    "PaymentIntentResponse" : {
      "type" : "object",
      "properties" : {
        "publicUrl" : {
          "type" : "string",
          "example" : "https://payments.medipago.com.ar/intention",
          "description" : "URL de acceso al boton de pago"
        },
        "hash" : {
          "type" : "string",
          "example" : "3d423197a30917a624a677bd07a73358ee1151e076848e77a1dae4d316c211142",
          "description" : "Hash que identifica el pago, debe ser enviado por query a la url"
        },
        "lifetime" : {
          "type" : "string",
          "example" : "600",
          "description" : "Segundos de expiracion del boton de pago"
        }
      }
    },
    "Callback" : {
      "type" : "object",
      "properties" : {
        "success" : {
          "type" : "string",
          "example" : "https://www.callbackexample.com/callback/ok"
        },
        "error" : {
          "type" : "string",
          "example" : "https://www.callbackexample.com/callback/error"
        },
        "cancel" : {
          "type" : "string",
          "example" : "https://www.callbackexample.com/callback/cancel"
        },
        "redirect" : {
          "type" : "string",
          "example" : "https://www.example.com/"
        }
      }
    },
    "TransactionData" : {
      "type" : "object",
      "required" : [ "className" ],
      "discriminator" : "className",
      "properties" : {
        "className" : {
          "type" : "string",
          "example" : "CodeRecharge",
          "description" : "Name of object"
        }
      }
    },
    "PhoneData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransactionData"
      }, {
        "properties" : {
          "countryCode" : {
            "type" : "string",
            "example" : "54",
            "description" : "CountryCode Nnumber"
          },
          "phoneNumber" : {
            "type" : "string",
            "example" : "1125451245",
            "description" : "Phone number with regional country code"
          },
          "msisdn" : {
            "type" : "string",
            "example" : "1154875415",
            "description" : "Phone number"
          }
        }
      } ]
    },
    "CodeData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransactionData"
      }, {
        "properties" : {
          "code" : {
            "type" : "string",
            "example" : "8457484658745154",
            "description" : "Code data"
          }
        }
      } ]
    },
    "TransportData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransactionData"
      }, {
        "properties" : {
          "cardId" : {
            "type" : "string",
            "example" : "8457484658745154",
            "description" : "Card Id"
          }
        }
      } ]
    },
    "ParkingData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransactionData"
      }, {
        "properties" : {
          "domain" : {
            "type" : "string",
            "description" : "Car domain"
          }
        }
      } ]
    },
    "ParkingSubscriptionData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ParkingData"
      }, { } ]
    },
    "ParkingPenaltyData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ParkingData"
      }, {
        "properties" : {
          "actCode" : {
            "type" : "string",
            "description" : "Act Penalty Code"
          }
        }
      } ]
    },
    "ParkingTimeData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ParkingData"
      }, {
        "properties" : {
          "hour" : {
            "type" : "integer",
            "description" : "Hours quantity",
            "minimum" : 0,
            "maximum" : 12
          }
        }
      } ]
    },
    "ParkingHourTimeData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ParkingTimeData"
      }, { } ]
    },
    "ParkingFractionTimeData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ParkingTimeData"
      }, {
        "properties" : {
          "fraction" : {
            "type" : "integer",
            "description" : "Quantity of minutes fraction",
            "minimum" : 0,
            "maximum" : 60
          }
        }
      } ]
    },
    "PersonalData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransactionData"
      }, {
        "properties" : {
          "identification" : {
            "type" : "string",
            "description" : "Person identification id"
          },
          "identificationType" : {
            "type" : "string",
            "enum" : [ "root", "passport" ]
          }
        }
      } ]
    },
    "TransferInnerData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransactionData"
      }, {
        "properties" : {
          "origin" : {
            "type" : "string",
            "description" : "Financial account origin ID of transfer"
          },
          "destination" : {
            "type" : "string",
            "description" : "Financial account destination ID of transfer"
          }
        }
      } ]
    },
    "TransferOuterData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransactionData"
      }, {
        "properties" : {
          "origin" : {
            "description" : "Financial account origin of transfer",
            "$ref" : "#/definitions/BankRouting"
          },
          "destination" : {
            "description" : "Financial account destination of transfer",
            "$ref" : "#/definitions/BankRouting"
          }
        }
      } ]
    },
    "PayoutData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransactionData"
      }, {
        "properties" : {
          "productId" : {
            "type" : "string",
            "description" : "Id of product payout"
          },
          "description" : {
            "type" : "string"
          }
        }
      } ]
    },
    "BillPaymentData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransactionData"
      }, {
        "properties" : {
          "billCompany" : {
            "$ref" : "#/definitions/BillCompany"
          },
          "currencyIso" : {
            "type" : "string",
            "example" : "032",
            "description" : "Currency for billing payment"
          },
          "customerIdentifier" : {
            "type" : "string",
            "example" : "15616184",
            "description" : "Identifier customer data, for this Business bill"
          },
          "billBarCode" : {
            "type" : "string",
            "example" : "8081561681651618615161",
            "description" : "BarCode for this bill"
          },
          "description" : {
            "type" : "string",
            "example" : "Cuota mes Julio",
            "description" : "Description for this bill"
          },
          "expirationDate" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "20190704T000000Z"
          },
          "totalAmount" : {
            "type" : "number",
            "description" : "Total ammount for this bill"
          },
          "externalData" : {
            "type" : "string",
            "description" : "External data to transfer"
          }
        }
      } ]
    },
    "TotalSale" : {
      "type" : "object",
      "properties" : {
        "date" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "20190502T121054Z",
          "readOnly" : true
        },
        "state" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "approved", "pending", "rejected" ]
        },
        "amount" : {
          "type" : "number",
          "format" : "double",
          "example" : 4345.32
        },
        "product" : {
          "$ref" : "#/definitions/Product"
        },
        "productReference" : {
          "$ref" : "#/definitions/Product"
        },
        "applicationUser" : {
          "$ref" : "#/definitions/ApplicationUser"
        }
      }
    },
    "FinancialMovement" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Transaction"
      }, {
        "properties" : {
          "type" : {
            "type" : "string",
            "example" : "Ingreso Liquidacion"
          },
          "movementSubType" : {
            "$ref" : "#/definitions/MovementSubType"
          }
        }
      } ]
    },
    "FinancialMovementList" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PaginationResponse"
      }, {
        "properties" : {
          "transactions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/FinancialMovement"
            }
          }
        }
      } ]
    },
    "Product" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "7CD008734CB91C54A100",
          "readOnly" : true
        },
        "code" : {
          "type" : "string",
          "example" : "256",
          "description" : "Product code"
        },
        "skuCode" : {
          "type" : "string",
          "example" : "5701234567899",
          "description" : "Product BarCode"
        },
        "enable" : {
          "type" : "boolean",
          "example" : true
        },
        "name" : {
          "type" : "string",
          "example" : "DirecTV",
          "description" : "The productâs name, meant to be displayable to the customer. Applicable to both service and good types"
        },
        "smallDescription" : {
          "type" : "string",
          "example" : "Recarga DirecTv"
        },
        "description" : {
          "type" : "string",
          "example" : "IMPORTANTE - Para ingresar la operacion se debe utilizar el codigo de  18  digitos de la tarjeta. Los montos de recarga permitidos son desde $150 hasta $2000"
        },
        "productGroup" : {
          "$ref" : "#/definitions/ProductGroup"
        },
        "productType" : {
          "$ref" : "#/definitions/ProductType"
        },
        "vendor" : {
          "$ref" : "#/definitions/Vendor"
        },
        "maxDigits" : {
          "type" : "string",
          "example" : "0,10,10",
          "description" : "Max digits of transaction data"
        },
        "initialValues" : {
          "type" : "string",
          "example" : "10",
          "description" : "Initialization value"
        },
        "minimium" : {
          "type" : "number",
          "example" : 150.0,
          "description" : "Minimium quantity available in a transaction"
        },
        "maximium" : {
          "type" : "number",
          "example" : 2000.0,
          "description" : "Maximium quantity available in a transaction"
        },
        "salePrice" : {
          "type" : "number",
          "example" : 270.0,
          "description" : "Product sale price"
        },
        "fractionalAmount" : {
          "type" : "number",
          "example" : 10.0,
          "description" : "Amount for fractional block of quantity product"
        },
        "imageUrl" : {
          "type" : "string",
          "example" : "https://cdn.telerecargas.com.ar/gvp/gv/externalFiles/dtv-logo.jpg",
          "description" : "Image of product"
        },
        "transactionDataLabel" : {
          "type" : "string",
          "example" : "Ingrese numero medidor"
        },
        "transactionDataClassName" : {
          "type" : "string",
          "example" : "CodeData",
          "description" : "Object class name of TransactionData",
          "enum" : [ "PhoneData", "CodeData", "BillPaymentData", "ParkingData", "PersonalData", "WithoutData", "PayoutData" ]
        }
      },
      "description" : "Product"
    },
    "Vendor" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "3B26087384811DD52425",
          "readOnly" : true
        },
        "code" : {
          "type" : "string",
          "example" : "000418"
        },
        "name" : {
          "type" : "string",
          "example" : "DirectTv",
          "description" : "Name of Vendor"
        },
        "description" : {
          "type" : "string",
          "example" : "DirecTv S.A."
        },
        "imageUrl" : {
          "type" : "string",
          "example" : "gv/externalFiles/dtv-logo.jpg",
          "description" : "Vendor logo image url"
        }
      }
    },
    "BillCompany" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "Edenor",
          "description" : "BillCompany id"
        },
        "code" : {
          "type" : "string",
          "example" : "170",
          "description" : "BillCompaby code"
        },
        "name" : {
          "type" : "string",
          "example" : "Edenor",
          "description" : "Name of Bill Company"
        },
        "category" : {
          "$ref" : "#/definitions/BillCompanyCategory"
        },
        "currencyIsoCode" : {
          "type" : "string",
          "example" : "032",
          "description" : "Available currency for this company"
        },
        "allowVoluntaryAmount" : {
          "type" : "boolean",
          "example" : true,
          "description" : "This Company permit voluntary payment amount, without any bill relation"
        },
        "allowBillRelationPayment" : {
          "type" : "boolean",
          "example" : true,
          "description" : "This Company permit a bill relation payment"
        },
        "allowBillManualPayment" : {
          "type" : "boolean",
          "example" : true,
          "description" : "This Company permit a bill manual customer identifier payment"
        },
        "allowPartialAmount" : {
          "type" : "boolean",
          "example" : true,
          "description" : "This Company permit modify the total Amount of a Bill"
        },
        "customerIdentifierDescription" : {
          "type" : "string",
          "example" : "Ingrese numero cliente",
          "description" : "Label description for manual bill query for this company"
        }
      }
    },
    "BillCompanyCategory" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "Id of category",
          "description" : "19A40F54F62925240D17"
        },
        "description" : {
          "type" : "string",
          "example" : "Electricidad",
          "description" : "Description of category"
        },
        "code" : {
          "type" : "string",
          "example" : "17",
          "description" : "Code of category"
        },
        "enable" : {
          "type" : "boolean",
          "example" : true
        },
        "name" : {
          "type" : "string",
          "example" : "Electricidad",
          "description" : "Name of category"
        }
      }
    },
    "PaymentMethodDefinition" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "visa_credit_card",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "Visa",
          "description" : "A short identifier for the supported payment method"
        },
        "paymentMethodType" : {
          "$ref" : "#/definitions/PaymentMethodType"
        },
        "enable" : {
          "type" : "boolean",
          "example" : true
        },
        "minimiumAmount" : {
          "type" : "number",
          "example" : 1.0,
          "description" : "Minimium amount for this payment method"
        },
        "maximiumAmount" : {
          "type" : "number",
          "example" : 20000.0,
          "description" : "Maximium amount for this payment method"
        },
        "requireFundingSource" : {
          "type" : "boolean",
          "example" : false,
          "description" : "This payment method data transaction requiere a funding source specification"
        },
        "availableFundingSources" : {
          "type" : "array",
          "description" : "List of available financial funding source for this payment method",
          "items" : {
            "$ref" : "#/definitions/FinancialAccount"
          }
        },
        "installmentsPlan" : {
          "$ref" : "#/definitions/InstallmentPlan"
        },
        "discount" : {
          "type" : "number",
          "example" : 10.0,
          "description" : "percent of discount"
        },
        "imageUrl" : {
          "type" : "string",
          "example" : "http://icons.iconarchive.com/icons/designbolts/credit-card-payment/256/Visa-icon.pngl"
        },
        "paymentMethodDefinitionClassName" : {
          "type" : "string",
          "example" : "CreditCardDefinition"
        },
        "paymentDataClassName" : {
          "type" : "string",
          "example" : "CardData",
          "description" : "Paymentdata className enum"
        }
      }
    },
    "CardDefinition" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PaymentMethodDefinition"
      }, {
        "properties" : {
          "holderName" : {
            "type" : "string",
            "example" : "Roberto Gomez",
            "description" : "Card holder name",
            "readOnly" : true
          },
          "identificationNumber" : {
            "type" : "string",
            "example" : "22114225",
            "description" : "Card holder identification number",
            "readOnly" : true
          },
          "maskedNumber" : {
            "type" : "string",
            "example" : "454085******1111",
            "description" : "Masked card number",
            "readOnly" : true
          },
          "expirationMonth" : {
            "type" : "string",
            "example" : "02",
            "description" : "Expiration card month number",
            "readOnly" : true
          },
          "expirationYear" : {
            "type" : "string",
            "example" : "22",
            "description" : "Expiration card year number",
            "readOnly" : true
          }
        }
      } ]
    },
    "CreditCardDefinition" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CardDefinition"
      }, { } ]
    },
    "DebitCardDefinition" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CardDefinition"
      }, { } ]
    },
    "QrCodeDefinition" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PaymentMethodDefinition"
      }, {
        "properties" : {
          "qrImageUrl" : {
            "type" : "string",
            "example" : "cdn.telerecargas.com.ar/qrCodeGeneratorToken",
            "description" : "Url for QR code image"
          }
        }
      } ]
    },
    "VirtualWalletDefinition" : {
      "properties" : {
        "customerIdentifierLabel" : {
          "type" : "string",
          "example" : "Ingrese numero Documento"
        },
        "customerAuthorizationLabel" : {
          "type" : "string",
          "example" : "Ingrese el token de la billetera"
        }
      },
      "allOf" : [ {
        "$ref" : "#/definitions/PaymentMethodDefinition"
      }, { } ]
    },
    "LinkPaymentDefinition" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PaymentMethodDefinition"
      }, { } ]
    },
    "CollectorNetworkDefinition" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PaymentMethodDefinition"
      }, {
        "properties" : {
          "paymentReferenceCode" : {
            "type" : "string"
          },
          "availableBranches" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Branch"
            }
          },
          "imageUrl" : {
            "type" : "string",
            "example" : "cdn.telerecargas.com.ar/pagoFacilCode",
            "description" : "Url for Collector image"
          }
        }
      } ]
    },
    "CollectorNetworkOnlineDefinition" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CollectorNetworkDefinition"
      }, { } ]
    },
    "CollectorNetworkOfflineDefinition" : {
      "allOf" : [ {
        "$ref" : "#/definitions/CollectorNetworkDefinition"
      }, { } ]
    },
    "BankDefinition" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PaymentMethodDefinition"
      }, {
        "properties" : {
          "bankAccount" : {
            "$ref" : "#/definitions/BankAccount"
          },
          "availableBranches" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Branch"
            }
          }
        }
      } ]
    },
    "BankTransferDefinition" : {
      "allOf" : [ {
        "$ref" : "#/definitions/BankDefinition"
      }, { } ]
    },
    "BankDepositDefinition" : {
      "allOf" : [ {
        "$ref" : "#/definitions/BankDefinition"
      }, {
        "properties" : {
          "bankAccount" : {
            "$ref" : "#/definitions/BankAccount"
          },
          "availableBranches" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Branch"
            }
          }
        }
      } ]
    },
    "BankCheckDefinition" : {
      "allOf" : [ {
        "$ref" : "#/definitions/BankDefinition"
      }, { } ]
    },
    "AtmCardDefinition" : {
      "allOf" : [ {
        "$ref" : "#/definitions/BankDefinition"
      }, {
        "properties" : {
          "atmCard" : {
            "type" : "object",
            "properties" : { }
          }
        }
      } ]
    },
    "CashDefinition" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PaymentMethodDefinition"
      }, { } ]
    },
    "PaymentData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/TransactionData"
      }, {
        "properties" : {
          "fundSourceId" : {
            "type" : "string",
            "description" : "Id of FinancialAccount fund source for this payment."
          }
        }
      } ]
    },
    "CollectorNetworkData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PaymentData"
      }, {
        "properties" : {
          "transactionNumber" : {
            "type" : "integer",
            "example" : 3242342397,
            "description" : "Transaction number in collector network"
          }
        }
      } ]
    },
    "CardData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PaymentData"
      }, {
        "properties" : {
          "firstNumbers" : {
            "type" : "string",
            "example" : "584587451"
          },
          "lastSixNumbers" : {
            "type" : "string",
            "example" : "254156"
          },
          "securityCode" : {
            "type" : "string",
            "example" : "467"
          },
          "track1" : {
            "type" : "string",
            "description" : "Encrypted track1"
          },
          "track2" : {
            "type" : "string",
            "description" : "Encrypted track2"
          },
          "track3" : {
            "type" : "string",
            "description" : "Encrypted track3"
          },
          "holderName" : {
            "type" : "string",
            "example" : "Roberto Gomez"
          },
          "expirationYear" : {
            "type" : "integer",
            "example" : 2019
          },
          "expirationMonth" : {
            "type" : "integer",
            "example" : 10
          },
          "holderIdentificationNumber" : {
            "type" : "string",
            "example" : "23463764"
          },
          "installments" : {
            "type" : "integer",
            "example" : 6,
            "description" : "Amount of fees"
          },
          "cardCapturedType" : {
            "$ref" : "#/definitions/CardCapturedType"
          }
        }
      } ]
    },
    "QrCodeData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PaymentData"
      }, { } ]
    },
    "BankTransferData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/BankDepositData"
      }, {
        "properties" : {
          "destinationBankRouting" : {
            "$ref" : "#/definitions/BankRouting"
          }
        }
      } ]
    },
    "BankCheckData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PaymentData"
      }, {
        "properties" : {
          "bankSourceId" : {
            "type" : "string",
            "description" : "Bank source of check"
          }
        }
      } ]
    },
    "AtmCardData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/BankDepositData"
      }, {
        "properties" : {
          "atmCardId" : {
            "type" : "string",
            "description" : "Id of atm card"
          }
        }
      } ]
    },
    "BankDepositData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PaymentData"
      }, {
        "properties" : {
          "depositTransactionNumber" : {
            "type" : "integer",
            "example" : 3242342397,
            "description" : "Deposit transaction number"
          },
          "bankAccount" : {
            "$ref" : "#/definitions/BankAccount"
          },
          "bankBrach" : {
            "$ref" : "#/definitions/Branch"
          },
          "depositDate" : {
            "type" : "string",
            "description" : "Deposit date"
          }
        }
      } ]
    },
    "VirtualWalletData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PaymentData"
      }, {
        "properties" : {
          "customerIdentifier" : {
            "type" : "string",
            "example" : "434234534"
          },
          "customerAuthorizationCode" : {
            "type" : "string",
            "example" : "89749357934"
          }
        }
      } ]
    },
    "LinkButtonData" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PaymentData"
      }, {
        "properties" : {
          "destinationContact" : {
            "$ref" : "#/definitions/PersonalContact"
          }
        }
      } ]
    },
    "InstallmentPlan" : {
      "properties" : {
        "currency" : {
          "type" : "string",
          "example" : "ARS",
          "description" : "ISO-4217 currency code"
        },
        "amount" : {
          "type" : "number",
          "example" : 1000.0
        },
        "installments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InstallmentPlan_installments"
          }
        }
      }
    },
    "AtmCard" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "3B26087384811DD52425",
          "readOnly" : true
        },
        "cardNumber" : {
          "type" : "string",
          "example" : "Card number"
        },
        "bankAccount" : {
          "$ref" : "#/definitions/BankAccount"
        }
      }
    },
    "CardTokenRequest" : {
      "type" : "object",
      "properties" : {
        "firstNumbers" : {
          "type" : "string",
          "example" : "584587451"
        },
        "lastSixNumbers" : {
          "type" : "string",
          "example" : "254156"
        },
        "track1" : {
          "type" : "string",
          "description" : "Encrypted track1"
        },
        "track2" : {
          "type" : "string",
          "description" : "Encrypted track2"
        },
        "track3" : {
          "type" : "string",
          "description" : "Encrypted track3"
        },
        "holderName" : {
          "type" : "string",
          "example" : "Roberto Gomez",
          "description" : "Card holder name"
        },
        "expirationYear" : {
          "type" : "integer",
          "example" : 2019
        },
        "expirationMonth" : {
          "type" : "integer",
          "example" : 10
        },
        "holderIdentificationNumber" : {
          "type" : "string",
          "example" : "23463764"
        },
        "cardCapturedType" : {
          "$ref" : "#/definitions/CardCapturedType"
        }
      }
    },
    "BankAccount" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "3B26087384811DD52425",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "Cta 318/4343423-344"
        },
        "description" : {
          "type" : "string",
          "example" : "Cuenta bancaria Liniers"
        },
        "bank" : {
          "$ref" : "#/definitions/Bank"
        },
        "bankBrach" : {
          "$ref" : "#/definitions/Branch"
        },
        "bankRouting" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/BankRouting"
          }
        }
      }
    },
    "Bank" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "3B26087384811DD52425",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "BBVA"
        },
        "description" : {
          "type" : "string",
          "example" : "BBVA S.A."
        },
        "imageUrl" : {
          "type" : "string",
          "example" : "https://upload.wikimedia.org/wikipedia/commons/thumb/7/70/Logotipo_de_BBVA.svg/1280px-Logotipo_de_BBVA.svg.png"
        }
      }
    },
    "Branch" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "3B26087384811DD52425",
          "readOnly" : true
        },
        "code" : {
          "type" : "string",
          "example" : "136"
        },
        "name" : {
          "type" : "string",
          "example" : "139 - Tartagal"
        },
        "description" : {
          "type" : "string"
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        }
      }
    },
    "BankRouting" : {
      "type" : "object",
      "properties" : {
        "cbu" : {
          "type" : "string",
          "example" : "CVU"
        },
        "label" : {
          "type" : "string",
          "example" : "fuego.piedra.agua"
        }
      }
    },
    "Currency" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "3B26087384811DD52425"
        },
        "isoCode4217" : {
          "type" : "string",
          "example" : "ARS"
        },
        "code" : {
          "type" : "string",
          "example" : "032"
        },
        "name" : {
          "type" : "string",
          "example" : "Peso argentino"
        }
      }
    },
    "ComercialType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "3B26087384811DD52425",
          "readOnly" : true
        },
        "code" : {
          "type" : "string",
          "example" : "001",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "Polirubro",
          "readOnly" : true
        }
      }
    },
    "AccountQualification" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "3B26087384811DD52425",
          "readOnly" : true
        },
        "level" : {
          "type" : "string",
          "example" : "1",
          "description" : "Account qualification level code"
        }
      }
    },
    "TributaryInfo" : {
      "type" : "object",
      "properties" : {
        "tributaryIdentificationType" : {
          "$ref" : "#/definitions/TributaryIdentificationType"
        },
        "tributaryIdentificationCode" : {
          "type" : "string",
          "example" : "27302545852"
        },
        "tributaryCondition" : {
          "$ref" : "#/definitions/TributaryCondition"
        }
      }
    },
    "TributaryIdentificationType" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "example" : "3B26087384811DD52425",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "example" : "CUIT",
          "readOnly" : true
        }
      }
    },
    "TributaryCondition" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "example" : "3B26087384811DD52425",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "example" : "Monotributista",
          "readOnly" : true
        }
      }
    },
    "District" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "3B26087384811DD52425",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "Lomas del Mirador",
          "readOnly" : true
        }
      }
    },
    "City" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "3B26087384811DD52425",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "La Matanza",
          "readOnly" : true
        }
      }
    },
    "Province" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "3B26087384811DD52425",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "Buenos Aires",
          "readOnly" : true
        }
      }
    },
    "Country" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "3B26087384811DD52425",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "Argentina",
          "readOnly" : true
        },
        "isoCode" : {
          "type" : "string",
          "example" : "AR",
          "readOnly" : true
        }
      }
    },
    "GeoLocation" : {
      "type" : "object",
      "properties" : {
        "manualCoordinates" : {
          "$ref" : "#/definitions/GeoCoordinates"
        },
        "geoCoordinates" : {
          "$ref" : "#/definitions/GeoCoordinates"
        },
        "updateGeoData" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates that this object must be updated"
        }
      }
    },
    "GeoCoordinates" : {
      "type" : "object",
      "properties" : {
        "latitude" : {
          "type" : "number",
          "example" : -34.603722,
          "description" : "Latitude in decimal format"
        },
        "longitude" : {
          "type" : "number",
          "example" : -58.381592,
          "description" : "Longitude in decimal format"
        },
        "geoHash" : {
          "type" : "string",
          "example" : "67zth",
          "description" : "Geohash with 5 character precision"
        },
        "locationType" : {
          "type" : "string",
          "enum" : [ "approximate", "geometric_center", "range_interpolated", "rooftop", "unknown" ]
        }
      }
    },
    "ProductGroup" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "3B26087384811DD52425",
          "readOnly" : true
        },
        "code" : {
          "type" : "string",
          "example" : "Recharge"
        },
        "name" : {
          "type" : "string",
          "example" : "Recargas"
        },
        "parentCategoryId" : {
          "type" : "string",
          "example" : "Recargas"
        },
        "imageUrl" : {
          "type" : "string",
          "example" : "https://cajavecina.gisgeoresearch.com/assets/images/icons/recargar_celular.png"
        },
        "description" : {
          "type" : "string",
          "example" : "Productos de Recarga Virtuales"
        }
      }
    },
    "IdentificationType" : {
      "type" : "object",
      "required" : [ "codigo" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "\\3242k3872h3823nf23fnk2",
          "readOnly" : true
        },
        "nombre" : {
          "type" : "string",
          "example" : "DNI",
          "readOnly" : true
        },
        "codigo" : {
          "type" : "string",
          "example" : "A3423"
        },
        "descripcion" : {
          "type" : "string",
          "example" : "Documento Nacional de Identidad",
          "readOnly" : true
        },
        "minLenght" : {
          "type" : "integer",
          "example" : 8,
          "readOnly" : true
        },
        "maxLenght" : {
          "type" : "integer",
          "example" : 12,
          "readOnly" : true
        }
      }
    },
    "TransactionReceipt" : {
      "type" : "object",
      "properties" : {
        "receiptString" : {
          "type" : "string"
        }
      },
      "description" : "Receipt for a transaction"
    },
    "GvpError" : {
      "type" : "object",
      "required" : [ "code", "message" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Error code"
        },
        "message" : {
          "type" : "string",
          "description" : "Description of error code"
        },
        "data" : {
          "$ref" : "#/definitions/GvpErrorDescription"
        }
      }
    },
    "PhoneValidationRequest" : {
      "type" : "object",
      "properties" : {
        "phone" : {
          "type" : "string",
          "example" : "+541112344455"
        },
        "validationCode" : {
          "type" : "string",
          "example" : "2851"
        },
        "validationType" : {
          "$ref" : "#/definitions/PhoneValidationType"
        }
      }
    },
    "PhoneValidationType" : {
      "type" : "string",
      "enum" : [ "sms", "whatsapp" ]
    },
    "Phone" : {
      "type" : "object",
      "properties" : {
        "phoneNumber" : {
          "type" : "string",
          "example" : "541167857544",
          "description" : "E.164 phone number"
        },
        "validatedPhone" : {
          "type" : "boolean",
          "example" : true
        }
      }
    },
    "BillPaymentPublication" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Transaction"
      }, {
        "properties" : {
          "transactionData" : {
            "description" : "BillPaymentPublication Transaction Data",
            "$ref" : "#/definitions/TransactionData"
          }
        }
      } ],
      "description" : "Bill Payment Publication"
    },
    "CashInOutPublication" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Transaction"
      }, {
        "properties" : {
          "transactionData" : {
            "description" : "CashInOutPublication Transaction Data",
            "$ref" : "#/definitions/TransactionData"
          }
        }
      } ],
      "description" : "CashInOut Publication"
    },
    "GvpErrorDescription" : {
      "type" : "object",
      "properties" : {
        "messageText" : {
          "type" : "string"
        },
        "errorCode" : {
          "type" : "number"
        },
        "errortype" : {
          "type" : "string"
        }
      }
    },
    "PaginationResponse" : {
      "type" : "object",
      "properties" : {
        "size" : {
          "type" : "integer",
          "description" : "Size of result"
        },
        "start" : {
          "type" : "integer",
          "description" : "Start number of result"
        },
        "limit" : {
          "type" : "integer",
          "description" : "Limit filter applied"
        },
        "maxReached" : {
          "type" : "boolean",
          "example" : false,
          "description" : "has reached max results"
        },
        "order" : {
          "type" : "string",
          "enum" : [ "desc", "asc" ]
        }
      }
    },
    "inline_response_200" : {
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "credit_card"
        },
        "values" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PaymentMethodDefinition"
          }
        }
      }
    },
    "inline_response_200_1" : {
      "properties" : {
        "PaginationResponse" : {
          "$ref" : "#/definitions/PaginationResponse"
        }
      }
    },
    "InstallmentPlan_installments" : {
      "type" : "object",
      "properties" : {
        "installment_amount" : {
          "type" : "number",
          "example" : 1000.0
        },
        "installments" : {
          "type" : "integer",
          "example" : 1
        },
        "total_amount" : {
          "type" : "number",
          "example" : 1000.0
        }
      }
    }
  },
  "parameters" : {
    "applicationId" : {
      "name" : "applicationId",
      "in" : "header",
      "required" : true,
      "type" : "string"
    },
    "deviceId" : {
      "name" : "deviceId",
      "in" : "header",
      "required" : true,
      "type" : "string"
    },
    "startIndex" : {
      "name" : "startIndex",
      "in" : "query",
      "description" : "Integer from start result",
      "required" : false,
      "type" : "integer",
      "default" : 0
    },
    "limitIndex" : {
      "name" : "limitIndex",
      "in" : "query",
      "description" : "Limit count of result",
      "required" : false,
      "type" : "integer",
      "default" : 20
    },
    "id" : {
      "name" : "id",
      "in" : "path",
      "description" : "ObjectId",
      "required" : true,
      "type" : "string"
    },
    "beginDate" : {
      "name" : "begin_date",
      "in" : "query",
      "description" : "Begin date balance",
      "required" : false,
      "type" : "string",
      "format" : "date-time"
    },
    "endDate" : {
      "name" : "end_date",
      "in" : "query",
      "description" : "End date balance",
      "required" : false,
      "type" : "string",
      "format" : "date-time"
    },
    "transactionSource" : {
      "name" : "transaction_source",
      "in" : "query",
      "description" : "Type of Transaction Source",
      "required" : false,
      "type" : "string",
      "enum" : [ "sale", "payment", "transferDebit", "transferCredit" ]
    },
    "direction" : {
      "name" : "direction",
      "in" : "query",
      "description" : "Monetary direction",
      "required" : false,
      "type" : "string",
      "enum" : [ "debit", "credit" ]
    },
    "movementType" : {
      "name" : "movement_type",
      "in" : "query",
      "description" : "Type of movement",
      "required" : false,
      "type" : "string",
      "enum" : [ "commission", "settlement", "monetary", "inventory" ]
    }
  },
  "responses" : {
    "NotFound" : {
      "description" : "The specified resource was not found",
      "schema" : {
        "$ref" : "#/definitions/GvpError"
      }
    },
    "Unauthorized" : {
      "description" : "Unauthorized",
      "schema" : {
        "$ref" : "#/definitions/GvpError"
      }
    }
  }
}